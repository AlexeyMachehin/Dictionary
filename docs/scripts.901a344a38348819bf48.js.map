{"version":3,"file":"scripts.901a344a38348819bf48.js","mappings":"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","sources":["webpack://test/webpack/runtime/chunk loaded","webpack://test/./src/js/material.js","webpack://test/./src/firebase/firebase.js","webpack://test/./src/main.js","webpack://test/webpack/bootstrap","webpack://test/webpack/runtime/define property getters","webpack://test/webpack/runtime/global","webpack://test/webpack/runtime/hasOwnProperty shorthand","webpack://test/webpack/runtime/jsonp chunk loading","webpack://test/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import \"materialize-css/dist/css/materialize.min.css\";\r\nimport \"materialize-css/dist/js/materialize.min\";\r\nimport \"materialize-css/dist/js/materialize\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  var elems = document.querySelectorAll(\".dropdown-trigger\");\r\n  var instances = M.Dropdown.init(elems);\r\n});\r\n\r\n","import { async } from \"@firebase/util\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getFirestore,\r\n  collection,\r\n  getDocs,\r\n  getDoc,\r\n  setDoc,\r\n  doc,\r\n  updateDoc,\r\n  deleteField,\r\n  onSnapshot,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nconst firebaseApp = initializeApp({\r\n  apiKey: \"AIzaSyC5I1TQyHSXpKIyD84w4_m5rOn18PdSZQU\",\r\n  authDomain: \"dictionary-3c90f.firebaseapp.com\",\r\n  projectId: \"dictionary-3c90f\",\r\n  storageBucket: \"dictionary-3c90f.appspot.com\",\r\n  messagingSenderId: \"523829874991\",\r\n  appId: \"1:523829874991:web:1db98b1c0ce218267751da\",\r\n});\r\nconst db = getFirestore(firebaseApp);\r\nconst auth = getAuth();\r\n\r\nexport function addNewUser(email, password) {\r\n  return new Promise((resolve, reject) => {\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => resolve(userCredential.user))\r\n      .catch((error) => reject(error));\r\n  });\r\n}\r\n\r\nexport function login(email, password) {\r\n  return new Promise((resolve, reject) => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => resolve(userCredential.user))\r\n      .catch((error) => reject(error));\r\n  });\r\n}\r\n\r\nexport function getRefDoc(nameDocument) {\r\n  return doc(db, \"words\", nameDocument);\r\n}\r\nexport function getRefCollection() {\r\n  return collection(db, \"words\");\r\n}\r\n\r\nexport async function fetchThemes() {\r\n  const themes = [];\r\n  const catalogBooksReference = collection(db, \"words\");\r\n  const docSnap = await getDocs(catalogBooksReference);\r\n  docSnap.forEach((value) => themes.push(value.id));\r\n  return themes;\r\n}\r\n\r\nexport async function deleteWord(nameDoc, nameWord) {\r\n  const cityRef = doc(db, \"words\", nameDoc);\r\n\r\n  // Remove the 'capital' field from the document\r\n  await updateDoc(cityRef, {\r\n    [nameWord]: deleteField(),\r\n  });\r\n}\r\n\r\nexport async function addNewWord(nameDoc, englishWord, russianWord) {\r\n  await updateDoc(doc(db, \"words\", nameDoc), {\r\n    [englishWord]: russianWord,\r\n  });\r\n}\r\n\r\nexport async function addNewTheme(nameDoc) {\r\n  await setDoc(doc(db, \"words\", nameDoc), {});\r\n}\r\n\r\nexport async function deleteTheme(nameTheme) {\r\n  await deleteDoc(doc(db, \"words\", nameTheme));\r\n}\r\n","import \"./css/nullstyle.css\";\r\nimport \"./css/style.css\";\r\nimport \"./js/material\";\r\nimport \"./firebase/firebase\";\r\nimport {\r\n  fetchThemes,\r\n  deleteWord,\r\n  getRefDoc,\r\n  addNewWord,\r\n  addNewTheme,\r\n  getRefCollection,\r\n  deleteTheme,\r\n  addNewUser,\r\n  login,\r\n} from \"./firebase/firebase\";\r\n\r\nimport { onSnapshot } from \"firebase/firestore\";\r\n\r\n// пример объекта \"тема\"\r\n// let themes = {\r\n//   furniture: {\r\n//     table: \"стол\",\r\n//     chair: \"стул\",\r\n//     furniture: \"мебель\",\r\n//     sofa: \"диван\",\r\n//     bed: \"кровать\",\r\n//     sofa: \"диван-кровать\",\r\n//     armchair: \"кресло\",\r\n//     stool: \"табурет\",\r\n//     couch: \"кушетка\",\r\n//     bench: \"скамейка\",\r\n//     desk: \"письменный стол\",\r\n//     coffee_table: \"журнальный столик\",\r\n//     cabinet: \"сервант\",\r\n//     chest_of_drawers: \"комод\",\r\n//     cupboard: \"шкаф_для посуды\",\r\n//     bookcase: \"книжный шкаф\",\r\n//     wardrobe: \"гардероб\",\r\n//     bookshelf: \"книжная полка\",\r\n//     double_bed: \"двухместная кровать\",\r\n//     shelf: \"полка\",\r\n//     hanger: \"вешалка\",\r\n//   },\r\n//   food: {\r\n//     banana: \"банан\",\r\n//     juice: \"сок\",\r\n//   },\r\n//   clothes: {\r\n//     jeans: \"джинсы\",\r\n//   },\r\n// };\r\n\r\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nlet keyByValue = null;\r\n\r\nlet currentLanguage = true; //флаг для выбора \"Russian-English\" или \"English-Russian\" внутри формы \"learn all words by theme\"\r\n\r\nlet wordsCopy; //при открытии окна копируем объект\r\n\r\nlet activeTheme = null; //выбранная тема\r\n\r\nlet index; // индекс ключа объекта (английского слова)\r\n\r\nlet previousWord; // переменная для отмены повторения слова при нажатии кнопки \"skip\"\r\n\r\nlet container = document.querySelector(\".container\"); // основной контейнер с программой\r\n\r\nlet preLoader = document.querySelector(\".container-preloader\"); // показывается preloader до тех пор, пока не загрузятся темы\r\n\r\n// -----------------------------------ФОРМЫ-------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// -------------------------форма: добавить тему-----------------------\r\n\r\nlet addThemeInput = document.querySelector(\".enter-new-theme\"); // инпут \"enter new theme\" \"введите название новой темы\" внутри формы\r\n\r\nconst addThemeButtonInForm = document.querySelector(\".add-new-theme\"); //кнопка \"add\" \"добавить тему в базу\" внутри формы\r\n\r\n// -------------------------форма: добавить слово в текущую тему-----------------------\r\n\r\nlet addWord = document.querySelector(\".enter-word\"); // инпут \"enter word\" \"добавьте новое слово\" внутри формы\r\n\r\nlet addTranslate = document.querySelector(\".enter-translate\"); // инпут с переводом \"enter translate\" \"введите перевод\" внутри формы\r\n\r\nlet addButtonForm = document.querySelector(\".add-button-form\"); //кнопка \"add\" \"добавить слово в базу\" внутри формы\r\n\r\nlet addWordHeader = document.querySelector(\".add-word_header\"); //заголовок \"add a word to the current topic\" внутри формы\r\n\r\n//----------------форма: учить слова на выбранную тему ------------------\r\n\r\nconst formLearn = document.querySelector(\".learn\"); // форма \"учить слова на текущую тему\"\r\n\r\nlet learnWord = document.querySelector(\".learning__word\"); //проверяемое слово (в заголовке)\r\n\r\nlet translate = document.querySelector(\".translate\"); //инпут с проверочным словом \"enter translate\" \"введите перевод\" внутри формы\r\n\r\nconst checkButton = document.querySelector(\".check\"); // кнопка \"check\" проверяющая слово\r\n\r\nconst skipButton = document.querySelector(\".next__word\"); // кнопка \"skip\" \"следующее слово\" пропускающая слово\r\n\r\nconst changeLanguageButton = document.querySelector(\".change-language-button\"); // кнопка меняющая язык \"Russian-English\" на \"English-Russian\"\r\n\r\nlet translateType = document.querySelector(\".translate-type__header\"); // контейнер с текстом \"Russian-English\" или \"English-Russian\"\r\n\r\nlet showTranslateButton = document.querySelector(\".show-translate\"); // кнопка \"show translate\" показать перевод (подсказка)\r\n\r\n//------------------------------форма: регистрация и вход ---------------------\r\n\r\n// регистрация-----------------------------------\r\n\r\nconst registerForm = document.querySelector(\".register-form\");\r\n\r\nlet addNewUserNameInput = document.getElementById(\"register-name\"); //инпут имя пользователя\r\n\r\nlet addNewUserEmailInput = document.getElementById(\"register-email\"); //инпут Email\r\n\r\nlet addNewUserPasswordInput = document.getElementById(\"register-password\"); //инпут Password\r\n\r\nlet addNewUserButton = document.querySelector(\".register-button\"); // кнопка регистрация нового пользователя\r\n\r\n// вход------------------------------------------\r\n\r\nconst loginForm = document.querySelector(\".login-form\");\r\n\r\nlet loginNewUserNameInput = document.getElementById(\"login-name\"); //инпут имя пользователя\r\n\r\nlet loginNewUserEmailInput = document.getElementById(\"login-email\"); //инпут Email\r\n\r\nlet loginNewUserPasswordeInput = document.getElementById(\"login-password\"); //инпут Password\r\n\r\nlet loginButton = document.querySelector(\".login-button\"); // кнопка логин (вход)\r\n\r\n//--------------------------------ГЛАВНОЕ ОКНО ПРОГРАММЫ----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//----------------------------меню (заголовок)-----------------------------\r\n\r\nconst menuTheme = document.querySelector(\".functions\"); // контейнер с кнопками \"choose theme\", \"learn all words by theme\"\r\n\r\nconst LearnWordsByThemeButton = document.querySelector(\".learn-button\"); //кнопка \"Learn Words ByTheme\" учить слова по текущей теме\r\n\r\nconst chooseThemeButton = document.querySelector(\"[data-target='dropdown1']\"); //меняющееся название темы у кнопки выпадающего меню\r\n\r\nlet dropDownList = document.querySelector(\".dropdown-content\"); //выпадающий список с темами\r\n\r\nlet dropDownListInner = document.querySelector(\".dropdown-content__inner\"); //внутренний список с темами\r\n\r\nlet deleteThemeButtons; // кнопка \"DEL\" удалить тему из выпадающего списка\r\n\r\nlet addThemeButtonInList = document.querySelector(\".add-theme\"); //кнопка \"add theme\" внутри выпадающего списка\r\n\r\n//-------------------------окно со списком слов текущей темы---------------\r\n\r\nlet addButtonTable = document.querySelector(\".add-button-table\"); //кнопка \"add\" добавляющая новое слово в текущую тему\r\n\r\nlet tableBody = document.querySelector(\".words-list\"); // список слов на текующую тему\r\n\r\nlet tableHeadItem = document.querySelector(\".table-head-item\"); // заголовок таблицы со словами на текущую тему и кнопкой \"add\"\r\n\r\n//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//инициализируем модальные окна (добавляется функционал из библиотеки materialize и добавляется функционал при закрытии форм)\r\nconst authModal = document.querySelector(\".register-and-login\");\r\nconst imgWrong = document.querySelector(\".img-wrong\");\r\ndocument.addEventListener(\"DOMContentLoaded\", function (e) {\r\n  const elems = document.querySelectorAll(\".modal\");\r\n  M.Modal.init(elems, {\r\n    onOpenEnd: function () {\r\n      translate.focus();\r\n      addThemeInput.focus();\r\n      addWord.focus();\r\n    },\r\n    onCloseEnd: function () {\r\n      learnWord.innerHTML = \"\";\r\n      checkButton.innerHTML = \"check\";\r\n      checkButton.disabled = false;\r\n      changeLanguageButton.disabled = false;\r\n      skipButton.disabled = false;\r\n      resetCheckInput(translate, \"enter translate\", \"error\");\r\n      if (activeTheme) {\r\n        onSnapshot(getRefDoc(activeTheme), (doc) => {\r\n          wordsCopy = doc.data();\r\n          renderTable(doc.data());\r\n        });\r\n      }\r\n    },\r\n  });\r\n});\r\n\r\n//настраиваем параметры выпадающего списка\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  var elems = document.querySelectorAll(\".dropdown-trigger\");\r\n  var instances = M.Dropdown.init(elems, {\r\n    constrainWidth: false,\r\n    isScrollable: true,\r\n  });\r\n});\r\n\r\n//действия при нажатии кнопок \"choose theme\" и \"learn words by theme\" (рендер таблицы слов, рендер рандомного числа, очистка формы)\r\nmenuTheme.addEventListener(\"click\", (e) => {\r\n  if (e.target.dataset.theme === \"theme-link\") {\r\n    activeTheme = e.target.innerHTML;\r\n    onSnapshot(getRefDoc(activeTheme), (doc) => {\r\n      wordsCopy = doc.data();\r\n      renderTable(doc.data());\r\n    });\r\n    LearnWordsByThemeButton.style.display = \"block\";\r\n    chooseThemeButton.innerHTML =\r\n      activeTheme + '<i class=\"material-icons right\">arrow_drop_down</i>'; //меняет название темы у кнопки выпадающего меню\r\n    chooseThemeButton.classList.remove(\"pulse\");\r\n  }\r\n\r\n  if (e.target.dataset.function === \"learn-all-words-by-theme\") {\r\n    if (!activeTheme) {\r\n      translate.disabled = true;\r\n      learnWord.innerHTML = \"Choose theme\";\r\n      checkButton.disabled = true;\r\n      skipButton.disabled = true;\r\n      showTranslateButton.disabled = true;\r\n    } else {\r\n      showTranslateButton.disabled = false;\r\n      //показываем проверяемое слово\r\n      //Object.values(themes[activeTheme]) - возвращает массив\r\n      renderRandomWord();\r\n    }\r\n    tableBody.innerHTML = \"\";\r\n  }\r\n});\r\n\r\n//----------------------------------ФОРМЫ------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n// --------------------форма \"добавление новой темы\"---------------------------------------\r\n\r\nregisterForm.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  addNewUser(registerForm.email.value, registerForm.password.value);\r\n});\r\n\r\nloginForm.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  login(loginForm.email.value, loginForm.password.value).then(() => {\r\n    M.Modal.getInstance(authModal).close();\r\n  });\r\n});\r\n\r\n// --------------------форма \"добавление новой темы\"---------------------------------------\r\n\r\n//добавляем новую тему (берем значение из инпута и при нажатии кнопки \"add\" записываем его в колонку words в firebase)\r\naddThemeButtonInForm.addEventListener(\"click\", () => {\r\n  addNewTheme(addThemeInput.value).then(\r\n    resetCheckInput(addThemeInput, \"Add new theme\", \"empty\")\r\n  );\r\n});\r\n\r\n// --------------------форма \"Learn All Words ByTheme\" учить слова по текущей теме-------------\r\n\r\n//проверка введенного перевода при нажатии кнопки \"check\", вывод \"CORRECT\", \"WRONG!\", \"You translated all words correctly\", очистка формы, рендер рандомного слова\r\ncheckButton.addEventListener(\"click\", (e) => check());\r\n\r\n// теже функции что у checkButton, только при нажатии ENTER\r\nformLearn.addEventListener(\"keydown\", (e) => {\r\n  if (e.key === \"Enter\") {\r\n    e.preventDefault();\r\n    check();\r\n  }\r\n});\r\n\r\n//рендер рандомного слова при нажатии кнопки \"skip\", вывод \"You translated all words correctly\", очистка формы\r\nskipButton.addEventListener(\"click\", () => {\r\n  if (Object.keys(wordsCopy).length === 0) {\r\n    skipButton.disabled = true;\r\n    translate.disabled = true;\r\n    learnWord.innerHTML = \"You translated all words correctly\";\r\n  } else {\r\n    //показываем проверяемое слово\r\n    renderRandomWord();\r\n    checkButton.disabled = false;\r\n    checkButton.innerHTML = \"check\";\r\n    translate.focus();\r\n  }\r\n});\r\n\r\nskipButton.addEventListener(\"mousedown\", () => {\r\n  resetCheckInput(translate, \"enter translate\", \"correct\");\r\n  resetCheckInput(translate, \"enter translate\", \"error\");\r\n});\r\n\r\n// кнопка меняющая язык \"Russian-English\" на \"English-Russian\"\r\nchangeLanguageButton.addEventListener(\"click\", () => {\r\n  translate.placeholder = \"enter translate\";\r\n  translate.classList.remove(\"error\");\r\n  if (currentLanguage) {\r\n    currentLanguage = false;\r\n    translateType.innerHTML = \"English-Russian\";\r\n  } else {\r\n    currentLanguage = true;\r\n    translateType.innerHTML = \"Russian-English\";\r\n  }\r\n  renderRandomWord();\r\n  translate.focus();\r\n});\r\n\r\n// кнопка \"show Translate\" показывает подсказку\r\nshowTranslateButton.addEventListener(\"mousedown\", () => {\r\n  if (currentLanguage) {\r\n    translate.value = Object.keys(wordsCopy)[index];\r\n  } else {\r\n    translate.value = Object.values(wordsCopy)[index];\r\n  }\r\n});\r\nshowTranslateButton.addEventListener(\"touchstart\", () => {\r\n  if (currentLanguage) {\r\n    translate.value = Object.keys(wordsCopy)[index];\r\n  } else {\r\n    translate.value = Object.values(wordsCopy)[index];\r\n  }\r\n});\r\n\r\nshowTranslateButton.addEventListener(\"mouseup\", () => {\r\n  translate.value = \"\";\r\n  translate.focus();\r\n});\r\nshowTranslateButton.addEventListener(\"touchend\", () => {\r\n  translate.value = \"\";\r\n  translate.focus();\r\n});\r\n\r\n// --------------------форма с добавлением слова-------------------------------------------\r\n\r\n//при нажатии кнопки \"add\" добавляем новое английское и русское слово в firebase\r\naddButtonForm.addEventListener(\"click\", () => {\r\n  if (addWord.value === \"\" || addTranslate.value === \"\") {\r\n    addWordHeader.innerHTML = \"enter translate\";\r\n  } else {\r\n    if (\r\n      (!checkRussian(addWord.value) && checkRussian(addTranslate.value)) ||\r\n      (checkRussian(addWord.value) && !checkRussian(addTranslate.value))\r\n    ) {\r\n      if (checkRussian(addWord.value)) {\r\n        addNewWord(\r\n          activeTheme,\r\n          addTranslate.value.trim().toLowerCase(),\r\n          addWord.value.trim().toLowerCase()\r\n        );\r\n        addWord.value = \"\";\r\n        addTranslate.value = \"\";\r\n        addWordHeader.innerHTML = \"add a word to the current theme\";\r\n      } else {\r\n        addNewWord(\r\n          activeTheme,\r\n          addWord.value.trim().toLowerCase(),\r\n          addTranslate.value.trim().toLowerCase()\r\n        );\r\n        addWord.value = \"\";\r\n        addTranslate.value = \"\";\r\n        addWordHeader.innerHTML = \"add a word to the current theme\";\r\n      }\r\n    } else {\r\n      addWordHeader.innerHTML = \"enter in different languages\";\r\n      addWord.value = \"\";\r\n      addTranslate.value = \"\";\r\n    }\r\n  }\r\n});\r\n\r\n//-----------------------ФУНКЦИИ-------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n//очистка формы: \"добавить новое слово\"\r\nfunction resetAddButtonForm(addWord, addTranslate, addWordHeader) {\r\n  addWord.value = \"\";\r\n  addTranslate.value = \"\";\r\n  addWordHeader.innerHTML = \"add a word to the current theme\";\r\n}\r\n\r\n//проверка русское слово или нет\r\nfunction checkRussian(text) {\r\n  return /[а-я]/i.test(text);\r\n}\r\n\r\n//рендер рандомного числа\r\nfunction renderRandomWord() {\r\n  index = random(Object.values(wordsCopy).length);\r\n  //Object.values(themes[activeTheme]) - возвращает массив\r\n\r\n  if (currentLanguage === true) {\r\n    if (\r\n      Object.values(wordsCopy)[index] === previousWord &&\r\n      Object.values(wordsCopy).length > 1\r\n    ) {\r\n      renderRandomWord();\r\n    } else {\r\n      previousWord = Object.values(wordsCopy)[index];\r\n      learnWord.innerHTML = \"\";\r\n      learnWord.insertAdjacentHTML(\r\n        \"afterbegin\",\r\n        ` <div\r\n    class=\"learning__word learn__input flow-text\"\r\n    data-function=\"learn__input\"\r\n  >${previousWord}</div>`\r\n      );\r\n    }\r\n  } else {\r\n    if (\r\n      Object.keys(wordsCopy)[index] === previousWord &&\r\n      Object.keys(wordsCopy).length > 1\r\n    ) {\r\n      renderRandomWord();\r\n    } else {\r\n      previousWord = Object.keys(wordsCopy)[index];\r\n      learnWord.innerHTML = \"\";\r\n      learnWord.insertAdjacentHTML(\r\n        \"afterbegin\",\r\n        ` <div\r\n  class=\"learning__word learn__input flow-text\"\r\n  data-function=\"learn__input\"\r\n>${previousWord}</div>`\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n//получаем рандомное число от 0 до макс.длины массива\r\nfunction random(lengthArray) {\r\n  let max = lengthArray;\r\n  let min = 0;\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\n// функция полного копирования объекта\r\nfunction deepClone(obj) {\r\n  const clObj = {};\r\n  for (const i in obj) {\r\n    if (obj[i] instanceof Object) {\r\n      clObj[i] = deepClone(obj[i]);\r\n      continue;\r\n    }\r\n    clObj[i] = obj[i];\r\n  }\r\n  return clObj;\r\n}\r\n\r\n//рендер таблицы со словами\r\nfunction renderTable(words) {\r\n  if (activeTheme) {\r\n    addWordHeader.innerHTML = \"add a word to the current theme\";\r\n    addButtonForm.disabled = false;\r\n    addWord.disabled = false;\r\n    addTranslate.disabled = false;\r\n    tableBody.innerHTML = \"\";\r\n    tableHeadItem.innerHTML = \"\";\r\n    Object.entries(words).map(([key, value]) =>\r\n      tableBody.insertAdjacentHTML(\r\n        \"afterbegin\",\r\n        `<tr><td>${key}</td><td>${value}</td><td><button class=\"delete-button btn #ef9a9a red lighten-3\" data-delete=\"${key}\">delete</button></td></tr>`\r\n      )\r\n    );\r\n    tableHeadItem.insertAdjacentHTML(\r\n      \"afterbegin\",\r\n      `<th>English word</th><th>Russian translate</th><th><button class=\"add-button-table btn modal-trigger\" href=\"#modal2\">add</button></th>`\r\n    );\r\n    let deleteWordButtons = document.querySelectorAll(\".delete-button\");\r\n    deleteWordButtons.forEach((deleteWordButton) =>\r\n      deleteWordButton.addEventListener(\"click\", (e) => {\r\n        let nameWord = e.target.dataset.delete;\r\n        deleteWord(activeTheme, nameWord);\r\n      })\r\n    );\r\n  } else {\r\n    addWordHeader.innerHTML = \"choose theme\";\r\n  }\r\n  // addButtonTable.addEventListener(\"click\", () => {\r\n  //   if (activeTheme) {\r\n  //     resetAddButtonForm(addWord, addTranslate, addWordHeader);\r\n  //   } else {\r\n  //     resetAddButtonForm(addWord, addTranslate, addWordHeader);\r\n  //     addWordHeader.innerHTML = \"choose theme\";\r\n  //   }\r\n  // });\r\n}\r\n\r\n//очистка инпута\r\nfunction resetCheckInput(element, placeholder, className) {\r\n  element.value = \"\";\r\n  element.disabled = false;\r\n  element.classList.remove(className);\r\n  element.setAttribute(\"placeholder\", placeholder);\r\n}\r\n\r\n//рендер выпадающего списка тем\r\nfunction renderTheme(theme) {\r\n  dropDownListInner.insertAdjacentHTML(\r\n    \"beforeend\",\r\n    `<li class=\"themes-list-item\">\r\n      <a class=\"theme-link\" data-theme=\"theme-link\">${theme}</a><button data-function='${theme}' class=\"btn delete-theme #ef9a9a red lighten-3\">del</button>\r\n    </li>`\r\n  );\r\n  deleteThemeButtons = document.querySelectorAll(\".delete-theme\"); // кнопка \"DEL\" удалить тему из выпадающего списка\r\n  deleteThemeButtons.forEach((elem) => {\r\n    elem.addEventListener(\"click\", (e) => {\r\n      deleteTheme(e.target.dataset.function);\r\n      if (e.target.dataset.function === activeTheme) {\r\n        chooseThemeButton.innerHTML = `Choose theme<i class=\"material-icons right\">arrow_drop_down</i>`;\r\n        tableBody.innerHTML = \"\";\r\n        addButtonForm.disabled = true;\r\n        addWord.disabled = true;\r\n        addTranslate.disabled = true;\r\n        activeTheme = null;\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n//отключает preloader после загрузки тем\r\nonSnapshot(getRefCollection(), (doc) => {\r\n  dropDownListInner.innerHTML = \"\";\r\n  doc.docs.forEach((value) => renderTheme(value.id));\r\n  preLoader.classList.remove(\"active\");\r\n  preLoader.style.display = \"none\";\r\n  container.style.display = \"block\";\r\n});\r\n\r\n//получаем ключ объекта, зная значение\r\nfunction getKeyByValue(object, value) {\r\n  return Object.keys(object).find((key) => object[key] === value);\r\n}\r\n\r\n//действия при нажатии кнопки check\r\nfunction check() {\r\n  if (currentLanguage) {\r\n    Object.keys(wordsCopy)[index] === translate.value.toLowerCase()\r\n      ? showIsCorrectResult()\r\n      : showIsWrongResult();\r\n  } else {\r\n    keyByValue = getKeyByValue(wordsCopy, translate.value.toLowerCase());\r\n    Object.values(wordsCopy)[index] === translate.value.toLowerCase()\r\n      ? showIsCorrectResult()\r\n      : showIsWrongResult();\r\n  }\r\n}\r\n\r\nfunction gameOver() {\r\n  skipButton.disabled = true;\r\n  translate.disabled = true;\r\n  learnWord.innerHTML = \"You translated all words correctly\";\r\n  resetCheckInput(translate, \"enter translate\", \"correct\");\r\n  showTranslateButton.disabled = true;\r\n  checkButton.disabled = true;\r\n  changeLanguageButton.disabled = true;\r\n}\r\n\r\nfunction showIsCorrectResult() {\r\n  // translate.disabled = true;\r\n  translate.classList.add(\"correct\");\r\n  translate.setAttribute(\"placeholder\", \"CORRECT\");\r\n  delete wordsCopy[translate.value.toLowerCase()];\r\n  translate.value = \"\";\r\n  translate.classList.remove(\"error\");\r\n  translate.focus();\r\n  if (Object.keys(wordsCopy).length === 0) {\r\n    gameOver();\r\n  } else {\r\n    setTimeout(() => {\r\n      renderRandomWord();\r\n      resetCheckInput(translate, \"enter translate\", \"correct\");\r\n    }, 500);\r\n  }\r\n}\r\n\r\nfunction showIsWrongResult() {\r\n  translate.classList.add(\"error\");\r\n  translate.setAttribute(\"placeholder\", \"WRONG!\");\r\n  translate.value = \"\";\r\n  setTimeout(() => {\r\n    resetCheckInput(translate, \"enter translate\", \"error\");\r\n    translate.focus();\r\n  }, 500);\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t787: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktest\"] = self[\"webpackChunktest\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [507], () => (__webpack_require__(872)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","document","addEventListener","elems","querySelectorAll","M","Dropdown","init","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","getRefDoc","nameDocument","doc","async","addNewWord","nameDoc","englishWord","russianWord","updateDoc","wordsCopy","index","previousWord","keyByValue","currentLanguage","activeTheme","container","querySelector","preLoader","addThemeInput","addThemeButtonInForm","addWord","addTranslate","addButtonForm","addWordHeader","formLearn","learnWord","translate","checkButton","skipButton","changeLanguageButton","translateType","showTranslateButton","registerForm","getElementById","loginForm","menuTheme","LearnWordsByThemeButton","chooseThemeButton","deleteThemeButtons","dropDownListInner","tableBody","tableHeadItem","authModal","checkRussian","text","test","renderRandomWord","lengthArray","max","Math","floor","random","Object","values","length","innerHTML","insertAdjacentHTML","keys","renderTable","words","disabled","entries","map","key","value","forEach","deleteWordButton","e","nameWord","target","dataset","delete","cityRef","deleteField","deleteWord","resetCheckInput","element","placeholder","className","classList","remove","setAttribute","check","object","toLowerCase","showIsCorrectResult","showIsWrongResult","find","add","focus","setTimeout","Modal","onOpenEnd","onCloseEnd","onSnapshot","data","constrainWidth","isScrollable","theme","style","display","function","email","password","preventDefault","Promise","resolve","reject","createUserWithEmailAndPassword","then","userCredential","user","catch","error","signInWithEmailAndPassword","getInstance","close","setDoc","addNewTheme","trim","collection","docs","renderTheme","id","elem","nameTheme","deleteDoc","deleteTheme","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}